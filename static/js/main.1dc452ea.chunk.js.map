{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/FuturamaCharacters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","images","alt","name","species","homePlanet","age","occupation","CardList","cards","allCards","map","card","first","middle","last","main","id","FuturamaCharacters","useState","characters","setCharacters","filterName","setFilterName","useEffect","fetch","then","response","json","data","console","log","filteredCharacters","filter","character","toUpperCase","includes","type","placeholder","onChange","e","target","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAoBeA,MApBf,SAAcC,GACZ,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,YAAYH,UAAU,qBAEpD,gCACE,mCAAMD,EAAMK,KAAZ,OACA,+BACE,4CAAeL,EAAMM,QAArB,OACA,0CAAaN,EAAMO,WAAnB,OACA,wCAAWP,EAAMQ,IAAjB,OACA,+CAAkBR,EAAMS,WAAxB,iBCSKC,MAnBf,SAAmBV,GACjB,IAAMW,EAAQX,EAAMY,SAASC,KAAI,SAAAC,GAAI,OACnC,cAAC,EAAD,CAEET,KAAMS,EAAKT,KAAKU,MAAM,IAAID,EAAKT,KAAKW,OAAO,IAAIF,EAAKT,KAAKY,KACzDX,QAASQ,EAAKR,QACdC,WAAYO,EAAKP,WACjBC,IAAKM,EAAKN,IACVC,WAAYK,EAAKL,WACjBN,OAAQW,EAAKX,OAAOe,MANfJ,EAAKK,OASd,OACE,qBAAKlB,UAAU,WAAf,SACGU,KC2BQS,MArCf,WACE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAGAC,qBAAU,WACRC,MAFc,kDAGXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIR,EAAcQ,QAC9B,IAEFL,qBAAU,WACRM,QAAQC,IAAIT,KACZ,CAACA,IAEH,IAAMU,EAAqBZ,EAAWa,QAAQ,SAAAC,GAE5C,OADkBA,EAAU/B,KAAKU,MAAM,IAAIqB,EAAU/B,KAAKW,OAAO,IAAIoB,EAAU/B,KAAKY,MAAMoB,cAC1EC,SAAUd,EAAWa,kBAKvC,OAFAL,QAAQC,IAAIX,GAGV,qCACE,qBAAKrB,UAAU,YAAf,SACA,+BACE,uBACEsC,KAAK,OACLC,YAAY,iBACZC,SAAU,SAAAC,GAAC,OAAIjB,EAAciB,EAAEC,OAAOC,cAG1C,cAAC,EAAD,CAAUhC,SAAUsB,Q,MCxBXW,MATf,WAEE,OACE,qBAAK5C,UAAU,MAAf,SACE,cAAC,EAAD,OCGS6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.1dc452ea.chunk.js","sourcesContent":["function Card(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"imageContainer\">\n        <img src={props.images} alt=\"Character\" className=\"characterImage\"/>  \n      </div>\n      <div>\n        <h2> {props.name} </h2>\n        <ul>\n          <li> Species: {props.species} </li>\n          <li> Planet:{props.homePlanet} </li>\n          <li> Age: {props.age} </li>\n          <li> Occupation: {props.occupation} </li>\n        </ul>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n\n","import Card from './Card'\n//  TODO : check wtf \"props validation\" really means...\nfunction CardList( props) {\n  const cards = props.allCards.map(card => (\n    <Card\n      key={card.id}\n      name={card.name.first+\" \"+card.name.middle+\" \"+card.name.last}\n      species={card.species}\n      homePlanet={card.homePlanet}\n      age={card.age}\n      occupation={card.occupation}\n      images={card.images.main}\n    />\n  ))\n  return (\n    <div className=\"cardList\">\n      {cards}\n    </div>\n  )\n}\n\nexport default CardList\n\n","import { useEffect, useState } from 'react'\nimport SearchCharacter from './SearchCharacter'\n\nimport CardList from './CardList'\n\n// TODO: separate searchbar in new component\nfunction FuturamaCharacters(){\n  const [characters, setCharacters] = useState([])\n  const [filterName, setFilterName] = useState(\"\")\n\n  const baseURL = 'https://api.sampleapis.com/futurama/characters';\n  useEffect(() => { \n    fetch(baseURL)\n      .then(response => response.json())\n      .then(data => setCharacters(data))\n  },[])\n\n  useEffect(() => {\n    console.log(filterName)\n  },[filterName])\n  \n  const filteredCharacters = characters.filter( character => { \n    const flatName = (character.name.first+\" \"+character.name.middle+\" \"+character.name.last).toUpperCase()\n    return flatName.includes( filterName.toUpperCase() )\n  })  \n  //preguntar por maña del puto console.log en relación con errores de react\n  console.log(characters)\n\n  return (\n    <>\n      <div className=\"searchBar\">\n      <form>\n        <input \n          type=\"text\" \n          placeholder=\"Search by name\"\n          onChange={e => setFilterName(e.target.value)}></input>\n      </form>\n      </div>\n      <CardList allCards={filteredCharacters} />\n    </>\n  )\n}\n\nexport default FuturamaCharacters\n\n","import FuturamaCharacters from './components/FuturamaCharacters'\n\nimport './App.css';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <FuturamaCharacters />      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}